#\u5173\u95ed\u7f13\u5b58, \u5373\u65f6\u5237\u65b0
#spring.freemarker.cache=false
#spring.thymeleaf.cache=true

#\u70ed\u90e8\u7f72\u751f\u6548
spring.devtools.restart.enabled=true
#\u8bbe\u7f6e\u91cd\u542f\u7684\u76ee\u5f55,\u6dfb\u52a0\u90a3\u4e2a\u76ee\u5f55\u7684\u6587\u4ef6\u9700\u8981restart
# \u4e3amybatis\u8bbe\u7f6e\uff0c\u751f\u4ea7\u73af\u5883\u53ef\u5220\u9664
restart.include.mapper=/mapper-[\\w-\\.]+jar
restart.include.pagehelper=/pagehelper-[\\w-\\.]+jar
#\u6392\u9664\u90a3\u4e2a\u76ee\u5f55\u7684\u6587\u4ef6\u4e0d\u9700\u8981restart
#spring.devtools.restart.exclude=static/**,public/**
#classpath\u76ee\u5f55\u4e0b\u7684WEB-INF\u6587\u4ef6\u5939\u5185\u5bb9\u4fee\u6539\u4e0d\u91cd\u542f
#spring.devtools.restart.exclude=WEB-INF/**

############################################################
#
# REDIS \u914d\u7f6e
#
############################################################
# Redis\u6570\u636e\u5e93\u7d22\u5f15\uff08\u9ed8\u8ba4\u4e3a0\uff09
spring.redis.database=1
# Redis\u670d\u52a1\u5668\u5730\u5740
spring.redis.host=192.168.1.191
# Redis\u670d\u52a1\u5668\u8fde\u63a5\u7aef\u53e3
spring.redis.port=6379
# Redis\u670d\u52a1\u5668\u8fde\u63a5\u5bc6\u7801\uff08\u9ed8\u8ba4\u4e3a\u7a7a\uff09
spring.redis.password=
# \u8fde\u63a5\u6c60\u6700\u5927\u8fde\u63a5\u6570\uff08\u4f7f\u7528\u8d1f\u503c\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09
spring.redis.pool.max-active=1000
# \u8fde\u63a5\u6c60\u6700\u5927\u963b\u585e\u7b49\u5f85\u65f6\u95f4\uff08\u4f7f\u7528\u8d1f\u503c\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09
spring.redis.pool.max-wait=-1
# \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5927\u7a7a\u95f2\u8fde\u63a5
spring.redis.pool.max-idle=10
# \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5
spring.redis.pool.min-idle=2
# \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff08\u6beb\u79d2\uff09
spring.redis.timeout=0



############################################################
#
# \u914d\u7f6e\u6570\u636e\u6e90\u76f8\u5173	\u4f7f\u7528\u963f\u91cc\u5df4\u5df4\u7684 druid \u6570\u636e\u6e90
#
############################################################
spring.datasource.url=jdbc:mysql://120.78.94.181:3306/schedule_recommend?useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

logging.level.com.example.springtest.dao=DEBUG

############################################################
#
# mybatis \u914d\u7f6e
#
mybatis.type-aliases-package=com.example.springtest.domain
mybatis.mapper-locations=classpath:mapper/*.xml
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
spring.mvc.static-path-pattern=/static/**